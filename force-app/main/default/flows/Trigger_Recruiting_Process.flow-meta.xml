<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>New_Recruiting_Opp_Email</name>
        <label>New Recruiting Opp Email</label>
        <locationX>176</locationX>
        <locationY>1679</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_Opp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmalBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>emaiList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>New Recruiting Opportunity: {!$Record.Name}</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <assignments>
        <name>Add_Email_To_List_of_Emails</name>
        <label>Add Email To List of Emails</label>
        <locationX>264</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>emaiList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AssignUserEmailsToList.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignUserEmailsToList</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddUserToList</name>
        <label>AddUserToList</label>
        <locationX>264</locationX>
        <locationY>1127</locationY>
        <assignmentItems>
            <assignToReference>UserList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetUsers_Try</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopThroughUserIdsFromGroupMember</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_UserId_to_List</name>
        <label>Assign UserId to List</label>
        <locationX>264</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>groupMemberUserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Users_from_GroupMemberId.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Users_from_GroupMemberId</targetReference>
        </connector>
    </assignments>
    <description>Version 1.12 - Lamar&apos;s Improvements on Alexa&apos;s Awesome flow</description>
    <interviewLabel>Trigger Recruiting Process {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Trigger Recruiting Process</label>
    <loops>
        <name>AssignUserEmailsToList</name>
        <label>AssignUserEmailsToList</label>
        <locationX>176</locationX>
        <locationY>1343</locationY>
        <collectionReference>UserList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Email_To_List_of_Emails</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>New_Recruiting_Opp_Email</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Get_Users_from_GroupMemberId</name>
        <label>Get Users from GroupMemberId</label>
        <locationX>176</locationX>
        <locationY>551</locationY>
        <collectionReference>GetGroupMemebers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_UserId_to_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>LoopThroughUserIdsFromGroupMember</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopThroughUserIdsFromGroupMember</name>
        <label>LoopThroughUserIdsFromGroupMember</label>
        <locationX>176</locationX>
        <locationY>887</locationY>
        <collectionReference>groupMemberUserIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>GetUsers_Try</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>AssignUserEmailsToList</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetGroupMemebers</name>
        <label>GetGroupMemebers</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Users_from_GroupMemberId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetPublicGroup.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetPublicGroup</name>
        <label>GetPublicGroup</label>
        <locationX>176</locationX>
        <locationY>311</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetGroupMemebers</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Recruiting_Team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetUsers_Try</name>
        <label>GetUsers</label>
        <locationX>264</locationX>
        <locationY>1007</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddUserToList</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>LoopThroughUserIdsFromGroupMember</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Opp</name>
        <label>Update Opp</label>
        <locationX>176</locationX>
        <locationY>1799</locationY>
        <inputAssignments>
            <field>RecruitingEmailSent__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetPublicGroup</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecruitingEmailSent__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EmalBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;{!$Record.Name} Opportunity is now ClosedWon. Please confirm if recruiting a new resources is needed. Any questions regarding the details of this opportunity should be directed towards {!$Record.Owner.Name}.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>emailCollection</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>emaiList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>groupMemberUserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>userIdListFromGroupMember</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
</Flow>
